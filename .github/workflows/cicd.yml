name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker Images
        run: |
          docker buildx build --platform linux/amd64,linux/arm64 \
            --push \
            -t ${{ secrets.DOCKER_REGISTRY }}/opentelemetry-demo:${{ github.sha }} .

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Run Unit Tests
        run: |
          make run-tests

  deploy:
    name: Deploy to Kubernetes
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'v1.27.0'

      - name: Authenticate with Kubernetes Cluster
        run: |
          echo "${{ secrets.KUBE_CONFIG }}" > kubeconfig
          export KUBECONFIG=kubeconfig

      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f kubernetes/opentelemetry-demo.yaml

      - name: Verify Deployment
        run: |
          kubectl rollout status deployment/frontend

  rollback:
    name: Rollback on Failure
    runs-on: ubuntu-latest
    if: failure()
    steps:
      - name: Authenticate with Kubernetes Cluster
        run: |
          echo "${{ secrets.KUBE_CONFIG }}" > kubeconfig
          export KUBECONFIG=kubeconfig

      - name: Rollback Deployment
        run: |
          kubectl rollout undo deployment/frontend