name: OpenTelemetry Demo CI/CD

on:
  workflow_call: # This makes the workflow reusable


jobs:
  deploy-to-eks:
    name: Deploy OpenTelemetry Demo to EKS
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Update kubeconfig for EKS
        run: aws eks update-kubeconfig --name otel-demo-cluster --region us-east-1

      - name: Add OpenTelemetry Helm repo
        run: |
          helm repo add open-telemetry https://open-telemetry.github.io/opentelemetry-helm-charts
          helm repo update

      - name: Deploy OpenTelemetry Demo via Helm
        run: |
          helm upgrade --install otel-demo open-telemetry/opentelemetry-demo \
            --version 0.21.0 \
            --namespace otel-helm

      - name: Wait for rollout completion
        run: |
          for deployment in $(kubectl get deployments -n otel-helm -o jsonpath="{.items[*].metadata.name}"); do
            echo "Waiting for rollout of $deployment..."
            kubectl rollout status deployment/$deployment -n otel-helm
          done

  rollback-on-failure:
    name: Rollback if deployment fails
    runs-on: ubuntu-latest
    if: failure()
    needs: deploy-to-eks

    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Update kubeconfig for EKS
        run: aws eks update-kubeconfig --name otel-demo-cluster --region us-east-1

      - name: Rollback Helm release
        run: helm rollback otel-demo --namespace otel-helm
