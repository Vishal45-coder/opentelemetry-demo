name: Kubernetes Deployment

on:
  workflow_call:

jobs:
  deploy-to-eks:
    name: Deploy to Amazon EKS
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Update kubeconfig for EKS
        run: aws eks update-kubeconfig --name otel-demo-cluster --region us-east-1

      - name: Set up Helm
        uses: azure/setup-helm@v3

      - name: Add OpenTelemetry Helm repo
        run: |
          helm repo add open-telemetry https://github.com/open-telemetry/opentelemetry-helm-charts
          helm repo update

      - name: Deploy with Helm
        run: |
          helm upgrade --install otel-demo open-telemetry/opentelemetry-demo \
            --namespace otel-demo --create-namespace

      - name: Wait for Rollout Completion
        run: |
          for deployment in $(kubectl get deployments -n otel-demo -o jsonpath="{.items[*].metadata.name}"); do
            echo "Checking rollout status for $deployment"
            kubectl rollout status deployment/$deployment -n otel-demo
          done

  rollback-on-failure:
    name: Rollback on Failure
    runs-on: ubuntu-latest
    if: failure()
    needs: deploy-to-eks

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Update kubeconfig for EKS
        run: aws eks update-kubeconfig --name otel-demo-cluster --region us-east-1

      - name: Rollback Helm release
        run: |
          helm rollback otel-demo
