name: Kubernetes Deployment

on:
  workflow_call:  # This allows it to be used in other workflows via 'uses'

jobs:
  deploy-to-eks:
    name: Deploy to Amazon EKS
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Update kubeconfig for EKS
        run: aws eks update-kubeconfig --name otel-demo-cluster --region us-east-1

      - name: Deploy to Kubernetes
        run: |
          kubectl apply --server-side --force-conflicts -n otel-demo -f https://raw.githubusercontent.com/open-telemetry/opentelemetry-demo/main/kubernetes/opentelemetry-demo.yaml

      # - name: Restart All Deployments
      #   run: |
      #     for deployment in $(kubectl get deployments -n otel-demo -o jsonpath="{.items[*].metadata.name}"); do
      #       echo "Restarting $deployment"
      #       kubectl rollout restart deployment/$deployment -n otel-demo
      #     done

      - name: Wait for Rollout Completion
        run: |
          for deployment in $(kubectl get deployments -n otel-demo -o jsonpath="{.items[*].metadata.name}"); do
            echo "Checking rollout status for $deployment"
            kubectl rollout status deployment/$deployment -n otel-demo
          done

      # - name: Clean Up Old or Pending Pods
      #   run: |
      #     kubectl get pods -n otel-demo --no-headers | \
      #     awk '$3 == "Pending" || $3 == "Terminating" {print $1}' | \
      #     xargs -r kubectl delete pod -n otel-demo --force --grace-period=0 || true

  rollback-on-failure:
    name: Rollback on Failure
    runs-on: ubuntu-latest
    if: failure()
    needs: deploy-to-eks

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Update kubeconfig for EKS
        run: aws eks update-kubeconfig --name otel-demo-cluster --region us-east-1

      - name: Rollback all deployments
        run: |
          for deployment in $(kubectl get deployments -n otel-demo -o jsonpath="{.items[*].metadata.name}"); do
            echo "Rolling back $deployment"
            kubectl rollout undo deployment/$deployment -n otel-demo
          done
